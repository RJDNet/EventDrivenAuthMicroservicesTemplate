version: "3.7"

services:

  # NGINX + React Client

  reverseproxy:
    build: ./reverseproxy
    container_name: reverseproxy
    restart: always
    ports:
      - 3000:80

  # API Gateway (Includes Auth)

  apigateway:
    build: ./server/apigateway/server
    container_name: apigateway
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - ASPNETCORE_ENVIRONMENT=Development
    expose:
      - 5000
    depends_on:
      - messagebroker
      - apigatewaydb

  # RabbitMQ (Message Broker)

  messagebroker:
    build: ./server/messagebroker
    container_name: messagebroker
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    expose:
      - 5672
      - 15672

  # Microservices

  csharpmicroservice:
    build: ./server/microservices/csharpmicroservice/server
    container_name: csharpmicroservice
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:5002
      - ASPNETCORE_ENVIRONMENT=Development
    expose:
      - 5002
    depends_on:
      - messagebroker
      - apigateway

  pythonmicroservice:
    build: ./server/microservices/pythonmicroservice/server
    container_name: pythonmicroservice
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
    expose:
      - 5004
    depends_on:
      - messagebroker
      - apigateway

  nodemicroservice:
    build: ./server/microservices/nodemicroservice/server
    container_name: nodemicroservice
    restart: always
    expose:
      - 5006
    depends_on:
      - messagebroker
      - apigateway
    
  # Databases

  apigatewaydb:
    build: ./server/apigateway/db
    container_name: apigatewaydb
    restart: always
    environment:
      - SA_PASSWORD=AdminAdmin123
      - ACCEPT_EULA=Y
    expose: 
      - 1433
    # In production, create volume for persisting db data.
    # volumes:
      # - apigatewaydb: ./var/lib/docker/volumes/apigatewaydb/_data
